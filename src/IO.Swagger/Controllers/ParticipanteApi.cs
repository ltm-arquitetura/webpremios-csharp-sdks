/*
 * Marketplace
 *
 * API Cloud Loyalty LTM - Webpremios
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ParticipanteApiController : Controller
    { 

        /// <summary>
        /// Obtém o saldo do participante
        /// </summary>
        /// <remarks>Recurso utilizado para recuperar o saldo do participante</remarks>
        /// <response code="200">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpGet]
        [Route("/marketplace-api/v1/participants/me/balance")]
        [SwaggerOperation("ParticipantsMeBalanceGet")]
        [SwaggerResponse(200, type: typeof(Balance))]
        public virtual IActionResult ParticipantsMeBalanceGet()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Balance>(exampleJson)
            : default(Balance);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Obtém o extrato do participante
        /// </summary>
        /// <remarks>Recurso utilizado para recuperar o extrato do participante</remarks>
        /// <param name="startDate">Data De</param>
        /// <param name="endDate">Data Até</param>
        /// <param name="offset">Número da página</param>
        /// <param name="limit">Número de registros</param>
        /// <response code="200">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpGet]
        [Route("/marketplace-api/v1/participants/me/extract")]
        [SwaggerOperation("ParticipantsMeExtractGet")]
        [SwaggerResponse(200, type: typeof(List<Extract>))]
        public virtual IActionResult ParticipantsMeExtractGet([FromQuery]string startDate, [FromQuery]string endDate, [FromQuery]decimal? offset, [FromQuery]decimal? limit)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Extract>>(exampleJson)
            : default(List<Extract>);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Obtém um participante
        /// </summary>
        /// <remarks>Recurso utilizado para retornar informações de um determinado participante</remarks>
        /// <response code="200">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpGet]
        [Route("/marketplace-api/v1/participants/me")]
        [SwaggerOperation("ParticipantsMeGet")]
        [SwaggerResponse(200, type: typeof(Participant))]
        public virtual IActionResult ParticipantsMeGet()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Participant>(exampleJson)
            : default(Participant);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Altera a senha do participante
        /// </summary>
        /// <remarks>Recurso utilizado para alterar a senha do participante</remarks>
        /// <param name="password"></param>
        /// <response code="204">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpPut]
        [Route("/marketplace-api/v1/participants/me/password")]
        [SwaggerOperation("ParticipantsMePasswordPut")]
        public virtual void ParticipantsMePasswordPut([FromBody]Password password)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Altera um participante
        /// </summary>
        /// <remarks>Recurso utilizado para alterar um participante</remarks>
        /// <param name="participant"></param>
        /// <response code="204">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpPut]
        [Route("/marketplace-api/v1/participants/me")]
        [SwaggerOperation("ParticipantsMePut")]
        public virtual void ParticipantsMePut([FromBody]ParticipantUpt participant)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Cria um novo participante
        /// </summary>
        /// <remarks>Recurso utilizado para criar um novo participante</remarks>
        /// <param name="participant"></param>
        /// <response code="201">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpPost]
        [Route("/marketplace-api/v1/participants")]
        [SwaggerOperation("ParticipantsPost")]
        [SwaggerResponse(200, type: typeof(ParticipantResult))]
        public virtual IActionResult ParticipantsPost([FromBody]ParticipantAdd participant)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ParticipantResult>(exampleJson)
            : default(ParticipantResult);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Reseta a senha do participante
        /// </summary>
        /// <remarks>Recurso utilizado para resetar a senha do participante</remarks>
        /// <param name="username">Username do participante</param>
        /// <param name="campaignUrl">URL da campanha</param>
        /// <response code="204">Operação realizada com sucesso.</response>
        /// <response code="400">Requisição mal formada.</response>
        /// <response code="401">Requisição requer autenticação.</response>
        /// <response code="403">O acesso ao recurso foi negado.</response>
        /// <response code="404">Recurso não encontrado.</response>
        /// <response code="422">Requisição não processável.</response>
        /// <response code="500">Erro Interno.</response>
        [HttpPost]
        [Route("/marketplace-api/v1/participants/{username}/password-reset")]
        [SwaggerOperation("ParticipantsUsernamePasswordResetPost")]
        public virtual void ParticipantsUsernamePasswordResetPost([FromRoute]string username, [FromQuery]string campaignUrl)
        { 
            throw new NotImplementedException();
        }
    }
}
